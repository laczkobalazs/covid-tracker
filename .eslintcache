[{"/home/balu/codecool/projects/covid-tracker/src/index.js":"1","/home/balu/codecool/projects/covid-tracker/src/App.js":"2","/home/balu/codecool/projects/covid-tracker/src/reportWebVitals.js":"3","/home/balu/codecool/projects/covid-tracker/src/component/DataProvider.js":"4","/home/balu/codecool/projects/covid-tracker/src/component/InfoBox.js":"5","/home/balu/codecool/projects/covid-tracker/src/component/Map.js":"6","/home/balu/codecool/projects/covid-tracker/src/component/Table.js":"7","/home/balu/codecool/projects/covid-tracker/src/util.js":"8"},{"size":500,"mtime":1606812098102,"results":"9","hashOfConfig":"10"},{"size":174,"mtime":1607459470289,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1606812098102,"results":"12","hashOfConfig":"10"},{"size":3237,"mtime":1607641057072,"results":"13","hashOfConfig":"10"},{"size":531,"mtime":1607465930803,"results":"14","hashOfConfig":"10"},{"size":129,"mtime":1607469745924,"results":"15","hashOfConfig":"10"},{"size":358,"mtime":1607731140911,"results":"16","hashOfConfig":"10"},{"size":206,"mtime":1607641014984,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"19pa3oq",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/balu/codecool/projects/covid-tracker/src/index.js",[],["36","37"],"/home/balu/codecool/projects/covid-tracker/src/App.js",[],"/home/balu/codecool/projects/covid-tracker/src/reportWebVitals.js",[],"/home/balu/codecool/projects/covid-tracker/src/component/DataProvider.js",["38","39"],"import React,  { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Table from './Table'\nimport Grid from '@material-ui/core/Grid'\nimport InfoBox from './InfoBox'\nimport Map from './Map'\nimport { MenuItem, FormControl, Select, Card, CardContent } from '@material-ui/core'\nimport '../style/card.css'\nimport '../style/style.css'\nimport { sortData } from '../util.js'\n\n\nfunction DataProvider() {\n  const [globalData, setGlobalData] = useState({});\n  const [countryData, setCountryData] = useState([])\n  const [countryNameList, setCountryNamelist] = useState([])\n  const [country, setCountry] = useState(\"worldwide\")\n  const [tableData, setTableData] = useState([]);\n\n  useEffect(() => {\n    const apiURL = \"https://disease.sh/v3/covid-19/all\"\n    axios.get(apiURL)\n      .then((response) => {\n        setGlobalData(response.data)\n      })\n      .catch((err) => console.log(err));\n    \n  }, [])\n\n  useEffect(() => {\n    const countryListApiURL = \"https://disease.sh/v3/covid-19/countries\"\n    axios.get(countryListApiURL)\n      .then((response) => {\n        const countries = response.data.map((country) => (country.country))\n        setCountryData(response.data)\n        setCountryNamelist(countries)\n        let sortedData = sortData(response.data);\n        setTableData(sortedData)\n      })\n      .catch((err) => console.log(err));\n  }, [])\n\n  const onCountryChange = (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode)\n\n    const url = countryCode === \"worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`\n    axios.get(url)\n    .then((res) => {\n      \n      setCountryData(res.data)\n    })\n  };\n\n  return (\n    <div className=\"global-container\">\n      <div className=\"global-container-left\">\n        <div className=\"global-container-header\">\n          <h1>Hello, I am the COVID Tracker App!</h1>\n          <FormControl className=\"app_dropdown\">\n            <Select variant=\"outlined\" value={country} onChange={onCountryChange}>\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countryNameList.map((country) => (\n                <MenuItem value={country} key={country}>{country}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"container-statistics\">\n          <InfoBox title=\"Coronavirus Cases\" cases={countryData.todayCases} total={countryData.cases}/>\n          <InfoBox title=\"Recoveries\" cases={countryData.todayRecovered} total={countryData.recovered}/>\n          <InfoBox title=\"Death\" cases={countryData.todayDeaths} total={countryData.deaths}/>\n        </div>\n        <div className=\"map-container\">\n          <Map/>\n        </div>\n        <div className=\"global-data-container\">\n          \n        </div>\n      </div>\n      <Card className=\"global-container-right\">\n        <CardContent>\n          <div className=\"app__information\">\n            <h3>Live Cases by Country</h3>\n            <Table countries={tableData} />\n            {/* <h3>Worldwide new {casesType}</h3>\n            <LineGraph casesType={casesType} /> */}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n\nexport default DataProvider\n","/home/balu/codecool/projects/covid-tracker/src/component/InfoBox.js",[],"/home/balu/codecool/projects/covid-tracker/src/component/Map.js",[],"/home/balu/codecool/projects/covid-tracker/src/component/Table.js",[],"/home/balu/codecool/projects/covid-tracker/src/util.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":4,"column":8,"nodeType":"46","messageId":"47","endLine":4,"endColumn":12},{"ruleId":"44","severity":1,"message":"48","line":14,"column":10,"nodeType":"46","messageId":"47","endLine":14,"endColumn":20},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'Grid' is defined but never used.","Identifier","unusedVar","'globalData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]