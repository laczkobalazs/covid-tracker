[{"/home/balu/codecool/projects/covid-tracker/src/index.js":"1","/home/balu/codecool/projects/covid-tracker/src/App.js":"2","/home/balu/codecool/projects/covid-tracker/src/reportWebVitals.js":"3","/home/balu/codecool/projects/covid-tracker/src/component/DataProvider.js":"4"},{"size":500,"mtime":1606812098102,"results":"5","hashOfConfig":"6"},{"size":174,"mtime":1607459470289,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1606812098102,"results":"8","hashOfConfig":"6"},{"size":1961,"mtime":1607461420799,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"19pa3oq",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/balu/codecool/projects/covid-tracker/src/index.js",[],["19","20"],"/home/balu/codecool/projects/covid-tracker/src/App.js",[],"/home/balu/codecool/projects/covid-tracker/src/reportWebVitals.js",[],"/home/balu/codecool/projects/covid-tracker/src/component/DataProvider.js",["21","22","23"],{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","severity":1,"message":"29","line":12,"column":23,"nodeType":"30","messageId":"31","endLine":12,"endColumn":37},{"ruleId":"28","severity":1,"message":"32","line":16,"column":11,"nodeType":"30","messageId":"31","endLine":16,"endColumn":28},{"ruleId":"33","severity":1,"message":"34","line":32,"column":38,"nodeType":"35","messageId":"36","endLine":32,"endColumn":40},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'setCountryList' is assigned a value but never used.","Identifier","unusedVar","'countryListApiURL' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]